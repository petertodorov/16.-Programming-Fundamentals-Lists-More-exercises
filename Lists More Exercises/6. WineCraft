using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
class WineCraft
{
    static List<int> grapes;
    static void Main(string[] args)
    {
        grapes = Console.ReadLine().Split(new char [] {' '},StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToList();
        int n = int.Parse(Console.ReadLine());
        do
        {
            for (int i = 0; i < n; i++)
            {
                BloomGrapes();
            }
            KillGrapes(n);
        }
        while (StrongerGrapesAreBiggerThan(n));

        PrintLiveGrapes();
    }

    private static void PrintLiveGrapes()
    {
        for (int i = 0; i < grapes.Count; i++)
        {
            if (IsAlive(i))
            {
                Console.Write(grapes[i]+" ");
            }
        }
        Console.WriteLine();
    }

    private static bool IsAlive(int i)
    {
        if (i<0|| i>=grapes.Count )
        {
           return false;
        }
        return grapes[i] > 0;
    }

    private static bool StrongerGrapesAreBiggerThan(int n)
    {
        int strongGrapesCounter = 0;
        for (int i = 0; i < grapes.Count; i++)
        {
            if (grapes[i]>n)
            {
                strongGrapesCounter++;
            }
        }
        return (strongGrapesCounter>=n);
    }

    private static void BloomGrapes()
    {
        for (int index = 0; index < grapes.Count; index++)
        {
            if (!IsAlive(index))
            {
                continue;
            }
            if (IsGreaterGrape(index))
            {
                grapes[index]++;
                if (IsAlive(index-1))
                {
                    grapes[index]++;
                    grapes[index-1]--;
                }
                if (IsAlive(index+1))
                {
                    grapes[index]++;
                    grapes[index + 1]--;
                }
            }
            else if (IsLesserGrape(index))
            {

            }
            else
            {
                grapes[index]++;
            }
        }
    }

    static bool IsGreaterGrape(int index)
    {
        if (index <= 0 || index >= (grapes.Count - 1))
        {
            return false;
        }
        return (grapes[index] > grapes[index - 1] && grapes[index] > grapes[index + 1]);
        
}
    static bool IsLesserGrape(int index)
    {
        return (IsGreaterGrape(index - 1) || IsGreaterGrape(index + 1));
       
    }
    private static void KillGrapes(int n)
    {
        for (int i = 0; i < grapes.Count; i++)
        {
            if (grapes[i]<=n)
            {
                grapes[i] = 0;
            }
        }
    }
}
        
        
